package messages

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewSendMessageParams creates a new SendMessageParams object
// with the default values initialized.
func NewSendMessageParams() *SendMessageParams {
	var ()
	return &SendMessageParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewSendMessageParamsWithTimeout creates a new SendMessageParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewSendMessageParamsWithTimeout(timeout time.Duration) *SendMessageParams {
	var ()
	return &SendMessageParams{

		timeout: timeout,
	}
}

// NewSendMessageParamsWithContext creates a new SendMessageParams object
// with the default values initialized, and the ability to set a context for a request
func NewSendMessageParamsWithContext(ctx context.Context) *SendMessageParams {
	var ()
	return &SendMessageParams{

		Context: ctx,
	}
}

/*SendMessageParams contains all the parameters to send to the API endpoint
for the send message operation typically these are written to a http.Request
*/
type SendMessageParams struct {

	/*Body*/
	Body SendMessageBody
	/*Token
	  bot's token to authorize the request

	*/
	Token *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the send message params
func (o *SendMessageParams) WithTimeout(timeout time.Duration) *SendMessageParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the send message params
func (o *SendMessageParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the send message params
func (o *SendMessageParams) WithContext(ctx context.Context) *SendMessageParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the send message params
func (o *SendMessageParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithBody adds the body to the send message params
func (o *SendMessageParams) WithBody(body SendMessageBody) *SendMessageParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the send message params
func (o *SendMessageParams) SetBody(body SendMessageBody) {
	o.Body = body
}

// WithToken adds the token to the send message params
func (o *SendMessageParams) WithToken(token *string) *SendMessageParams {
	o.SetToken(token)
	return o
}

// SetToken adds the token to the send message params
func (o *SendMessageParams) SetToken(token *string) {
	o.Token = token
}

// WriteToRequest writes these params to a swagger request
func (o *SendMessageParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	r.SetTimeout(o.timeout)
	var res []error

	if err := r.SetBodyParam(o.Body); err != nil {
		return err
	}

	if o.Token != nil {

		// path param token
		if err := r.SetPathParam("token", *o.Token); err != nil {
			return err
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
