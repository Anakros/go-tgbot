package attachments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/olebedev/go-tgbot/models"
)

// SendDocumentReader is a Reader for the SendDocument structure.
type SendDocumentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SendDocumentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewSendDocumentOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewSendDocumentOK creates a SendDocumentOK with default headers values
func NewSendDocumentOK() *SendDocumentOK {
	return &SendDocumentOK{}
}

/*SendDocumentOK handles this case with default header values.

SendDocumentOK send document o k
*/
type SendDocumentOK struct {
	Payload SendDocumentOKBody
}

func (o *SendDocumentOK) Error() string {
	return fmt.Sprintf("[POST /bot{token}/sendDocument][%d] sendDocumentOK  %+v", 200, o.Payload)
}

func (o *SendDocumentOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*SendDocumentOKBody send document o k body
swagger:model SendDocumentOKBody
*/
type SendDocumentOKBody struct {

	// description
	// Required: true
	Description *string `json:"description"`

	// error code
	// Required: true
	ErrorCode *int64 `json:"error_code"`

	// ok
	// Required: true
	Ok *bool `json:"ok"`

	// result
	// Required: true
	Result *models.Message `json:"result"`
}
