package attachments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/olebedev/go-tgbot/models"
)

// SendVoiceLinkReader is a Reader for the SendVoiceLink structure.
type SendVoiceLinkReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SendVoiceLinkReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewSendVoiceLinkOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewSendVoiceLinkBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewSendVoiceLinkOK creates a SendVoiceLinkOK with default headers values
func NewSendVoiceLinkOK() *SendVoiceLinkOK {
	return &SendVoiceLinkOK{}
}

/*SendVoiceLinkOK handles this case with default header values.

SendVoiceLinkOK send voice link o k
*/
type SendVoiceLinkOK struct {
	Payload *models.ResponseMessage
}

func (o *SendVoiceLinkOK) Error() string {
	return fmt.Sprintf("[POST /bot{token}/sendVoice#link][%d] sendVoiceLinkOK  %+v", 200, o.Payload)
}

func (o *SendVoiceLinkOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSendVoiceLinkBadRequest creates a SendVoiceLinkBadRequest with default headers values
func NewSendVoiceLinkBadRequest() *SendVoiceLinkBadRequest {
	return &SendVoiceLinkBadRequest{}
}

/*SendVoiceLinkBadRequest handles this case with default header values.

Error
*/
type SendVoiceLinkBadRequest struct {
	Payload *models.Error
}

func (o *SendVoiceLinkBadRequest) Error() string {
	return fmt.Sprintf("[POST /bot{token}/sendVoice#link][%d] sendVoiceLinkBadRequest  %+v", 400, o.Payload)
}

func (o *SendVoiceLinkBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
