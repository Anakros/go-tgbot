package inline

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/olebedev/go-tgbot/models"
)

// AnswerInlineQueryReader is a Reader for the AnswerInlineQuery structure.
type AnswerInlineQueryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AnswerInlineQueryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewAnswerInlineQueryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewAnswerInlineQueryBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewAnswerInlineQueryOK creates a AnswerInlineQueryOK with default headers values
func NewAnswerInlineQueryOK() *AnswerInlineQueryOK {
	return &AnswerInlineQueryOK{}
}

/*AnswerInlineQueryOK handles this case with default header values.

AnswerInlineQueryOK answer inline query o k
*/
type AnswerInlineQueryOK struct {
	Payload AnswerInlineQueryOKBody
}

func (o *AnswerInlineQueryOK) Error() string {
	return fmt.Sprintf("[POST /bot{token}/answerInlineQuery][%d] answerInlineQueryOK  %+v", 200, o.Payload)
}

func (o *AnswerInlineQueryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAnswerInlineQueryBadRequest creates a AnswerInlineQueryBadRequest with default headers values
func NewAnswerInlineQueryBadRequest() *AnswerInlineQueryBadRequest {
	return &AnswerInlineQueryBadRequest{}
}

/*AnswerInlineQueryBadRequest handles this case with default header values.

Error
*/
type AnswerInlineQueryBadRequest struct {
	Payload *models.Error
}

func (o *AnswerInlineQueryBadRequest) Error() string {
	return fmt.Sprintf("[POST /bot{token}/answerInlineQuery][%d] answerInlineQueryBadRequest  %+v", 400, o.Payload)
}

func (o *AnswerInlineQueryBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*AnswerInlineQueryBody answer inline query body
swagger:model AnswerInlineQueryBody
*/
type AnswerInlineQueryBody struct {

	// cache time
	CacheTime int64 `json:"cache_time,omitempty"`

	// inline query id
	// Required: true
	InlineQueryID *string `json:"inline_query_id"`

	// is personal
	IsPersonal bool `json:"is_personal,omitempty"`

	// next offset
	NextOffset string `json:"next_offset,omitempty"`

	// results
	// Required: true
	Results []interface{} `json:"results"`

	// switch pm parameter
	SwitchPmParameter string `json:"switch_pm_parameter,omitempty"`

	// switch pm text
	SwitchPmText string `json:"switch_pm_text,omitempty"`
}

/*AnswerInlineQueryOKBody answer inline query o k body
swagger:model AnswerInlineQueryOKBody
*/
type AnswerInlineQueryOKBody struct {

	// description
	// Required: true
	Description *string `json:"description"`

	// error code
	// Required: true
	ErrorCode *int64 `json:"error_code"`

	// ok
	// Required: true
	Ok *bool `json:"ok"`

	// result
	// Required: true
	Result *bool `json:"result"`
}
