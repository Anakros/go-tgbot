package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/go-openapi/errors"
)

// ReplyKeyboardMarkup reply keyboard markup
// swagger:model ReplyKeyboardMarkup
type ReplyKeyboardMarkup struct {

	// keyboard
	Keyboard []*KeyboardButton `json:"keyboard"`

	// one time keyboard
	OneTimeKeyboard bool `json:"one_time_keyboard,omitempty"`

	// resize keyboard
	ResizeKeyboard bool `json:"resize_keyboard,omitempty"`

	// selective
	Selective bool `json:"selective,omitempty"`
}

// Validate validates this reply keyboard markup
func (m *ReplyKeyboardMarkup) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateKeyboard(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ReplyKeyboardMarkup) validateKeyboard(formats strfmt.Registry) error {

	if swag.IsZero(m.Keyboard) { // not required
		return nil
	}

	for i := 0; i < len(m.Keyboard); i++ {

		if swag.IsZero(m.Keyboard[i]) { // not required
			continue
		}

		if m.Keyboard[i] != nil {

			if err := m.Keyboard[i].Validate(formats); err != nil {
				return err
			}
		}

	}

	return nil
}
