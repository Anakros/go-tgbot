package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// AnswerInlineQueryBody answer inline query body
// swagger:model AnswerInlineQueryBody
type AnswerInlineQueryBody struct {

	// cache time
	CacheTime int64 `json:"cache_time,omitempty"`

	// inline query id
	// Required: true
	InlineQueryID *string `json:"inline_query_id"`

	// is personal
	IsPersonal bool `json:"is_personal,omitempty"`

	// next offset
	NextOffset string `json:"next_offset,omitempty"`

	// results
	// Required: true
	Results []interface{} `json:"results"`

	// switch pm parameter
	SwitchPmParameter string `json:"switch_pm_parameter,omitempty"`

	// switch pm text
	SwitchPmText string `json:"switch_pm_text,omitempty"`
}

// Validate validates this answer inline query body
func (m *AnswerInlineQueryBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateInlineQueryID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateResults(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AnswerInlineQueryBody) validateInlineQueryID(formats strfmt.Registry) error {

	if err := validate.Required("inline_query_id", "body", m.InlineQueryID); err != nil {
		return err
	}

	return nil
}

func (m *AnswerInlineQueryBody) validateResults(formats strfmt.Registry) error {

	if err := validate.Required("results", "body", m.Results); err != nil {
		return err
	}

	return nil
}
