package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/go-openapi/errors"
)

// Update update
// swagger:model Update
type Update struct {

	// callback query
	CallbackQuery *CallbackQuery `json:"callback_query,omitempty"`

	// channel post
	ChannelPost *Message `json:"channel_post,omitempty"`

	// edited channel post
	EditedChannelPost *Message `json:"edited_channel_post,omitempty"`

	// edited message
	EditedMessage *Message `json:"edited_message,omitempty"`

	// inline query
	InlineQuery interface{} `json:"inline_query,omitempty"`

	// message
	Message *Message `json:"message,omitempty"`

	// update id
	UpdateID int64 `json:"update_id,omitempty"`
}

// Validate validates this update
func (m *Update) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCallbackQuery(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateChannelPost(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateEditedChannelPost(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateEditedMessage(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateMessage(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Update) validateCallbackQuery(formats strfmt.Registry) error {

	if swag.IsZero(m.CallbackQuery) { // not required
		return nil
	}

	if m.CallbackQuery != nil {

		if err := m.CallbackQuery.Validate(formats); err != nil {
			return err
		}
	}

	return nil
}

func (m *Update) validateChannelPost(formats strfmt.Registry) error {

	if swag.IsZero(m.ChannelPost) { // not required
		return nil
	}

	if m.ChannelPost != nil {

		if err := m.ChannelPost.Validate(formats); err != nil {
			return err
		}
	}

	return nil
}

func (m *Update) validateEditedChannelPost(formats strfmt.Registry) error {

	if swag.IsZero(m.EditedChannelPost) { // not required
		return nil
	}

	if m.EditedChannelPost != nil {

		if err := m.EditedChannelPost.Validate(formats); err != nil {
			return err
		}
	}

	return nil
}

func (m *Update) validateEditedMessage(formats strfmt.Registry) error {

	if swag.IsZero(m.EditedMessage) { // not required
		return nil
	}

	if m.EditedMessage != nil {

		if err := m.EditedMessage.Validate(formats); err != nil {
			return err
		}
	}

	return nil
}

func (m *Update) validateMessage(formats strfmt.Registry) error {

	if swag.IsZero(m.Message) { // not required
		return nil
	}

	if m.Message != nil {

		if err := m.Message.Validate(formats); err != nil {
			return err
		}
	}

	return nil
}
